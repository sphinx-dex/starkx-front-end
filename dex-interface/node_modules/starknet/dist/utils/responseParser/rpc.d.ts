/**
 * Map RPC Response to common interface response
 * Intersection (sequencer response ∩ (∪ rpc responses))
 */
import { CallContractResponse, EstimateFeeResponse, GetBlockResponse, GetTransactionReceiptResponse, GetTransactionResponse } from '../../types';
import { RPC } from '../../types/api';
import { ResponseParser } from '.';
declare type RpcGetBlockResponse = RPC.GetBlockWithTxHashesResponse & {
    [key: string]: any;
};
declare type GetTransactionByHashResponse = RPC.GetTransactionByHashResponse & {
    [key: string]: any;
};
declare type TransactionReceipt = RPC.TransactionReceipt & {
    [key: string]: any;
};
export declare class RPCResponseParser implements Omit<ResponseParser, 'parseDeclareContractResponse' | 'parseDeployContractResponse' | 'parseInvokeFunctionResponse'> {
    parseGetBlockResponse(res: RpcGetBlockResponse): GetBlockResponse;
    parseGetTransactionResponse(res: GetTransactionByHashResponse): GetTransactionResponse;
    parseGetTransactionReceiptResponse(res: TransactionReceipt): GetTransactionReceiptResponse;
    parseFeeEstimateResponse(res: RPC.EstimateFeeResponse): EstimateFeeResponse;
    parseCallContractResponse(res: Array<string>): CallContractResponse;
}
export {};
