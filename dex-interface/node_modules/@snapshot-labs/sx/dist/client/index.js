"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Client = void 0;
const cross_fetch_1 = __importDefault(require("cross-fetch"));
const types_1 = require("./types");
class Client {
    address;
    constructor(address) {
        this.address = address;
    }
    async sign(web3, address, message, types) {
        // @ts-ignore
        const signer = web3?.getSigner ? web3.getSigner() : web3;
        const data = { domain: types_1.domain, types, message };
        try {
            const sig = await signer._signTypedData(types_1.domain, data.types, message);
            return { address, sig, data };
        }
        catch (e) {
            return Promise.reject(e);
        }
    }
    async send(envelop) {
        const init = {
            method: 'POST',
            headers: {
                Accept: 'application/json',
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({
                jsonrpc: '2.0',
                method: 'send',
                params: { envelop },
                id: null
            })
        };
        const res = await (0, cross_fetch_1.default)(this.address, init);
        const json = await res.json();
        return json.result;
    }
    async proposal(web3, address, message) {
        return await this.sign(web3, address, message, types_1.proposalTypes);
    }
    async vote(web3, address, message) {
        return await this.sign(web3, address, message, types_1.voteTypes);
    }
}
exports.Client = Client;
